{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { ComposableMap, Geographies, Geography, ZoomableGroup, Marker } from 'react-simple-maps';\n// import { geoPath } from 'd3-geo';\n// import { feature } from 'topojson-client';\n// import worldData from '../data/world-110m.json'; // Ensure this path is correct\n// import { Tooltip } from 'react-tooltip';\n\n// const WorldMap = () => {\n//   const navigate = useNavigate();\n//   const [content, setContent] = useState(\"\");\n//   const handleCountryClick = (countryCode) => {\n//     navigate(`/country/${countryCode}`);\n//   };\n\n//   const geoUrl = 'https://unpkg.com/world-atlas@1.1.4/world/110m.json';\n\n//   const markers = [\n//     {\n//       markerOffset: -15,\n//       name: \"Sau Paulo\",\n//       coordinates: [-58.3816, -34.6037]\n//     }\n//   ]\n//   return (\n//     <div style={{\n//       width: \"100%\",\n//       height: \"100%\",\n//       display: 'flex',\n//       flexDirection: 'column',\n//       justifyContent: 'center',\n//       alignItems: 'center'\n//     }}>\n//   <Tooltip place=\"top\" type=\"dark\" effect=\"float\" />\n//       <div style={{ width: \"1400px\", borderStyle: 'double' }}>\n//         <ComposableMap data-tip=\"\">\n//           {/* <ZoomableGroup zoom={1}> */}\n//             <Geographies geography={geoUrl}>\n//               {({ geographies }) =>\n//                 geographies.map((geo) => (\n//                   <Geography\n//                     key={geo.rsmKey}\n//                     geography={geo}\n//                     onClick={() => handleCountryClick(geo.properties.ISO_A3)}\n//                     // onMouseEnter={() => {\n//                     //   const { NAME } = geo.properties;\n//                     //   setContent(`${NAME}`);\n//                     // }}\n//                     // onMouseLeave={() => {\n//                     //   setContent('');\n//                     // }}\n//                     style={{\n//                       hover: { fill: \"#F53\", outline: \"none\" },\n//                       pressed: { fill: \"#E42\", outline: \"none\" }\n//                     }}\n//                   />\n//                 ))\n//               }\n//             </Geographies>\n//             {/* {markers.map(({ name, coordinates, markerOffset }) => (\n//               <Marker key={name} coordinates={coordinates}>\n//                 <circle r={10} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2}></circle>\n//                 <text\n//                   textAnchor=\"middle\" y={markerOffset}\n//                   style={{\n//                     fontFamily: \"system-ui\", \n//                     fill: \"#5D5A6D\"\n//                   }}\n//                 >\n//                   {name}\n//                 </text>\n//               </Marker>\n//             ))} */}\n//           {/* </ZoomableGroup> */}\n//         </ComposableMap>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WorldMap;","map":{"version":3,"names":[],"sources":["/Users/chynphieyang/MyWebPage/src/components/WorldMap.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { ComposableMap, Geographies, Geography, ZoomableGroup, Marker } from 'react-simple-maps';\n// import { geoPath } from 'd3-geo';\n// import { feature } from 'topojson-client';\n// import worldData from '../data/world-110m.json'; // Ensure this path is correct\n// import { Tooltip } from 'react-tooltip';\n\n// const WorldMap = () => {\n//   const navigate = useNavigate();\n//   const [content, setContent] = useState(\"\");\n//   const handleCountryClick = (countryCode) => {\n//     navigate(`/country/${countryCode}`);\n//   };\n\n//   const geoUrl = 'https://unpkg.com/world-atlas@1.1.4/world/110m.json';\n\n//   const markers = [\n//     {\n//       markerOffset: -15,\n//       name: \"Sau Paulo\",\n//       coordinates: [-58.3816, -34.6037]\n//     }\n//   ]\n//   return (\n//     <div style={{\n//       width: \"100%\",\n//       height: \"100%\",\n//       display: 'flex',\n//       flexDirection: 'column',\n//       justifyContent: 'center',\n//       alignItems: 'center'\n//     }}>\n//   <Tooltip place=\"top\" type=\"dark\" effect=\"float\" />\n//       <div style={{ width: \"1400px\", borderStyle: 'double' }}>\n//         <ComposableMap data-tip=\"\">\n//           {/* <ZoomableGroup zoom={1}> */}\n//             <Geographies geography={geoUrl}>\n//               {({ geographies }) =>\n//                 geographies.map((geo) => (\n//                   <Geography\n//                     key={geo.rsmKey}\n//                     geography={geo}\n//                     onClick={() => handleCountryClick(geo.properties.ISO_A3)}\n//                     // onMouseEnter={() => {\n//                     //   const { NAME } = geo.properties;\n//                     //   setContent(`${NAME}`);\n//                     // }}\n//                     // onMouseLeave={() => {\n//                     //   setContent('');\n//                     // }}\n//                     style={{\n//                       hover: { fill: \"#F53\", outline: \"none\" },\n//                       pressed: { fill: \"#E42\", outline: \"none\" }\n//                     }}\n//                   />\n//                 ))\n//               }\n//             </Geographies>\n//             {/* {markers.map(({ name, coordinates, markerOffset }) => (\n//               <Marker key={name} coordinates={coordinates}>\n//                 <circle r={10} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2}></circle>\n//                 <text\n//                   textAnchor=\"middle\" y={markerOffset}\n//                   style={{\n//                     fontFamily: \"system-ui\", \n//                     fill: \"#5D5A6D\"\n//                   }}\n//                 >\n//                   {name}\n//                 </text>\n//               </Marker>\n//             ))} */}\n//           {/* </ZoomableGroup> */}\n//         </ComposableMap>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WorldMap;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}