{"ast":null,"code":"var _jsxFileName = \"/Users/chynphieyang/MyWebPage/src/components/WorldMap.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup, Marker } from 'react-simple-maps';\nimport { geoPath } from 'd3-geo';\nimport { feature } from 'topojson-client';\nimport worldData from '../data/world-110m.json'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleCountryClick = countryCode => {\n    navigate(`/country/${countryCode}`);\n  };\n  const geoUrl = 'https://unpkg.com/world-atlas@1.1.4/world/110m.json';\n  const markers = [{\n    markerOffset: -15,\n    name\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"1400px\",\n        borderStyle: 'double'\n      },\n      children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n        \"data-tip\": \"\",\n        children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n          zoom: 1,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Geographies, {\n            geography: geoUrl,\n            children: ({\n              geographies\n            }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              onClick: () => handleCountryClick(geo.properties.ISO_A3),\n              style: {\n                // default: { fill: \"#D6D6DA\", outline: \"none\" },\n                hover: {\n                  fill: \"#F53\",\n                  outline: \"none\"\n                },\n                pressed: {\n                  fill: \"#E42\",\n                  outline: \"none\"\n                }\n              }\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), markers.map(({\n            name,\n            coordinates,\n            markerOffset\n          }) => /*#__PURE__*/_jsxDEV(Marker, {\n            coordinates: coordinates,\n            children: [\"\\u2039circle r=\", 10, \" fill=\\\"#F00\\\" stroke=\\\"#fff\\\" strokeWidth=\", 2, /*#__PURE__*/_jsxDEV(\"text\", {\n              textAnchor: \"middle\",\n              y: markerOffset,\n              style: {\n                fontFamily: \"system-ui\",\n                fill: \"#5D5A6D\"\n              },\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useNavigate","ComposableMap","Geographies","Geography","ZoomableGroup","Marker","geoPath","feature","worldData","jsxDEV","_jsxDEV","WorldMap","_s","navigate","handleCountryClick","countryCode","geoUrl","markers","markerOffset","name","style","width","height","display","flexDirection","justifyContent","alignItems","children","borderStyle","zoom","geography","geographies","map","geo","onClick","properties","ISO_A3","hover","fill","outline","pressed","rsmKey","fileName","_jsxFileName","lineNumber","columnNumber","coordinates","textAnchor","y","fontFamily","_c","$RefreshReg$"],"sources":["/Users/chynphieyang/MyWebPage/src/components/WorldMap.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup, Marker } from 'react-simple-maps';\nimport { geoPath } from 'd3-geo';\nimport { feature } from 'topojson-client';\nimport worldData from '../data/world-110m.json'; // Ensure this path is correct\n\nconst WorldMap = () => {\n  const navigate = useNavigate();\n  const handleCountryClick = (countryCode) => {\n    navigate(`/country/${countryCode}`);\n  };\n\n  const geoUrl = 'https://unpkg.com/world-atlas@1.1.4/world/110m.json';\n\n  const markers = [\n    {\n      markerOffset: -15,\n      name\n    }\n  ]\n  return (\n    <div style={{\n      width: \"100%\",\n      height: \"100%\",\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }}>\n    <div style={{width: \"1400px\", borderStyle:'double'}}>\n      <ComposableMap data-tip=\"\">\n      <ZoomableGroup zoom={1}>\n        {\" \"}\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => (\n              <Geography \n                key={geo.rsmKey} \n                geography={geo} \n                onClick={() => handleCountryClick(geo.properties.ISO_A3)} \n                style={{\n                  // default: { fill: \"#D6D6DA\", outline: \"none\" },\n                  hover: { fill: \"#F53\", outline: \"none\" },\n                  pressed: { fill: \"#E42\", outline: \"none\" }\n                }}\n              />\n            ))\n          }\n            </Geographies>\n            {markers.map(({ name, coordinates, markerOffset }) => (\n              <Marker key={name} coordinates={coordinates}>\n                â€¹circle r={10} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2}\n                <text\n                  textAnchor=\"middle\" y={markerOffset}\n                  style={{\n                    fontFamily: \"system-ui\", fill: \"#5D5A6D\"\n                  }}\n                >\n                  {name}\n                </text>\n              </Marker>\n            ))}\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    </div>\n  );\n};\n\nexport default WorldMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}