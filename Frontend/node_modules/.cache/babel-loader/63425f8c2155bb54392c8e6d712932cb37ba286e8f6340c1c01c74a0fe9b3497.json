{"ast":null,"code":"var _jsxFileName = \"/Users/chynphieyang/MyWebPage/src/components/pages/Products.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../App.css';\nimport { Button, Icon, GridRow, GridColumn, Grid, Image, StepDescription } from 'semantic-ui-react';\nimport '../Cards.css';\nimport CardItem from './CardItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateDish = () => {\n  // Your dish generation logic here\n};\nconst GridExampleCelled = () => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const handleButtonClick = () => {\n    // Update the display text when the button is clicked\n    setDisplayText('helloo');\n    generateDish(); // Call your dish generation logic\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      animated: \"fade\",\n      onClick: handleButtonClick,\n      children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n        visible: true,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n        hidden: true,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"arrow right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(GridExampleCelled, \"VQtRpmiMwqKw9U5KYgC1NekCzRY=\");\n_c = GridExampleCelled;\nexport default function Products() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products\",\n    children: /*#__PURE__*/_jsxDEV(GridExampleCelled, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Products;\nvar _c, _c2;\n$RefreshReg$(_c, \"GridExampleCelled\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"names":["React","useState","Button","Icon","GridRow","GridColumn","Grid","Image","StepDescription","CardItem","jsxDEV","_jsxDEV","Fragment","_Fragment","generateDish","GridExampleCelled","_s","displayText","setDisplayText","handleButtonClick","children","animated","onClick","Content","visible","fileName","_jsxFileName","lineNumber","columnNumber","hidden","name","_c","Products","className","_c2","$RefreshReg$"],"sources":["/Users/chynphieyang/MyWebPage/src/components/pages/Products.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../../App.css';\nimport { Button, Icon, GridRow, GridColumn, Grid, Image, StepDescription } from 'semantic-ui-react';\nimport '../Cards.css';\nimport CardItem from './CardItem';\n\nconst generateDish = () => {\n  // Your dish generation logic here\n}\n\nconst GridExampleCelled = () => {\n  const [displayText, setDisplayText] = useState('');\n\n  const handleButtonClick = () => {\n    // Update the display text when the button is clicked\n    setDisplayText('helloo');\n    generateDish(); // Call your dish generation logic\n  };\n\n  return (\n    <>\n    <Button animated='fade' onClick={handleButtonClick}>\n      <Button.Content visible>Next</Button.Content>\n      <Button.Content hidden>\n        <Icon name='arrow right' />\n      </Button.Content>\n    </Button>      \n    <div>{displayText}</div>\n    </>\n  );\n};\n\nexport default function Products() {\n  return (\n    <div className='products'>\n      <GridExampleCelled />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AACtB,SAASC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,UAAU,EAAEC,IAAI,EAAEC,KAAK,EAAEC,eAAe,QAAQ,mBAAmB;AACnG,OAAO,cAAc;AACrB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB;AAAA,CACD;AAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAD,cAAc,CAAC,QAAQ,CAAC;IACxBJ,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,oBACEH,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA,CAACT,MAAM;MAACmB,QAAQ,EAAC,MAAM;MAACC,OAAO,EAAEH,iBAAkB;MAAAC,QAAA,gBACjDT,OAAA,CAACT,MAAM,CAACqB,OAAO;QAACC,OAAO;QAAAJ,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,eAC7CjB,OAAA,CAACT,MAAM,CAACqB,OAAO;QAACM,MAAM;QAAAT,QAAA,eACpBT,OAAA,CAACR,IAAI;UAAC2B,IAAI,EAAC;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACTjB,OAAA;MAAAS,QAAA,EAAMH;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACtB,CAAC;AAEP,CAAC;AAACZ,EAAA,CApBID,iBAAiB;AAAAgB,EAAA,GAAjBhB,iBAAiB;AAsBvB,eAAe,SAASiB,QAAQA,CAAA,EAAG;EACjC,oBACErB,OAAA;IAAKsB,SAAS,EAAC,UAAU;IAAAb,QAAA,eACvBT,OAAA,CAACI,iBAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACM,GAAA,GANuBF,QAAQ;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}