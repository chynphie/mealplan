{"ast":null,"code":"var _jsxFileName = \"/Users/chynphieyang/MyWebPage/Frontend/src/components/pages/MyFridge.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MyFridge.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyFridge = () => {\n  _s();\n  const [foodName, setFoodName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [fridgeItems, setFridgeItems] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [expanded, setExpanded] = useState({\n    fruits: true,\n    meats: true,\n    vegetables: true\n  });\n\n  // get the external api for food category\n  const getFoodCategory = async foodName => {\n    const apiKey = '3e41632960bd2af35354380bd56e028f'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${foodName}`;\n    console.log(foodName, apiUrl);\n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n      const data = await response.json();\n      console.log('food data from external api', data);\n      const category = data.common[0].serving_unit; // Extract food category\n      const unit = data.common[0].serving_qty;\n      return category;\n    } catch (error) {\n      console.error('Error fetching food data:', error);\n    }\n  };\n  useEffect(() => {\n    fetch('http://localhost:8081/my_fridge').then(res => res.json()).then(data => {\n      console.log('Fetched data:', data);\n      setFridgeItems(data); // Set the fetched data to fridgeItems\n    }).catch(err => console.log(err));\n  }, []);\n  const handleAddItem = async () => {\n    const category = await getFoodCategory(foodName);\n    console.log(category);\n    const myData = {\n      name: foodName,\n      unit: category || \"unknown\",\n      quantity: amount\n    };\n    try {\n      const result = await fetch('http://localhost:8081/my_fridge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(myData)\n      });\n      const resultInJson = await result.json(); // Parse response as JSON\n\n      // Update the state with the new fridge item\n      setFridgeItems(prev => [...prev, resultInJson]);\n      console.log('Response:', resultInJson); // Handle the result here\n    } catch (error) {\n      console.error('Error submitting fridge item:', error);\n    }\n  };\n  const toggleCategory = category => {\n    setExpanded(prevExpanded => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category]\n    }));\n  };\n  const debounce = (func, delay) => {\n    let timeoutId;\n    return (...args) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setFoodName(value);\n    fetchSuggestions(value); // Call directly\n  };\n  const fetchSuggestions = async input => {\n    if (!input) {\n      setSuggestions([]); // Clear suggestions if input is empty\n      return;\n    }\n    const apiKey = '3e41632960bd2af35354380bd56e028f'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${input}`;\n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n      const data = await response.json();\n      const suggestions = Array.isArray(data.common) ? data.common.map(hint => hint.food_name) : []; // Extract food names for suggestions\n\n      setSuggestions(suggestions);\n    } catch (error) {\n      console.error('Error fetching food suggestions:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter the food here\",\n            value: foodName,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter the amount\",\n            value: amount,\n            onChange: e => setAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddItem,\n            children: \"Add to your fridge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"suggestions-list\",\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"suggestion-item\",\n              onClick: () => {\n                setFoodName(suggestion); // Set the food name to the selected suggestion\n                setSuggestions([]); // Clear suggestions after selection\n              },\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your fridge:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: \"Fruits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: fridgeItems.filter(item => item.category === \"fruits\").map(item => {\n              // console.log(item);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [item.food_name, \", \", item.quantity, \" \", item.unit]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.header, {\n          children: \"Meats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.body, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: fridgeItems.filter(item => item.category === \"meat\").map(item => {\n              // console.log(item);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [item.food_name, \", \", item.quantity, \" \", item.unit]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.header, {\n          children: \"Vegetables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.body, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: fridgeItems.filter(item => item.category === \"vegetables\").map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.food_name, \", \", item.quantity, \" \", item.unit]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(MyFridge, \"CylUYaKBsvvGTntk40pDx8Ci3Ek=\");\n_c = MyFridge;\nexport default MyFridge;\nvar _c;\n$RefreshReg$(_c, \"MyFridge\");","map":{"version":3,"names":["React","useState","useEffect","Accordion","jsxDEV","_jsxDEV","MyFridge","_s","foodName","setFoodName","amount","setAmount","fridgeItems","setFridgeItems","suggestions","setSuggestions","expanded","setExpanded","fruits","meats","vegetables","getFoodCategory","apiKey","appId","apiUrl","console","log","response","fetch","headers","ok","Error","data","json","category","common","serving_unit","unit","serving_qty","error","then","res","catch","err","handleAddItem","myData","name","quantity","result","method","body","JSON","stringify","resultInJson","prev","toggleCategory","prevExpanded","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","handleInputChange","e","value","target","fetchSuggestions","input","Array","isArray","map","hint","food_name","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","suggestion","index","defaultActiveKey","Item","eventKey","Header","Body","filter","item","id","header","_c","$RefreshReg$"],"sources":["/Users/chynphieyang/MyWebPage/Frontend/src/components/pages/MyFridge.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MyFridge.css';\nimport Accordion from 'react-bootstrap/Accordion';\n\nconst MyFridge = () => {\n  const [foodName, setFoodName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [fridgeItems, setFridgeItems] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [expanded, setExpanded] = useState({\n    fruits: true,\n    meats: true,\n    vegetables: true,\n  });\n\n  // get the external api for food category\n  const getFoodCategory = async (foodName) => {\n    const apiKey = '3e41632960bd2af35354380bd56e028f'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${foodName}`;\n    console.log(foodName, apiUrl);\n    \n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\",\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n\n      const data = await response.json();\n      console.log('food data from external api', data);\n      const category = data.common[0].serving_unit; // Extract food category\n      const unit = data.common[0].serving_qty\n      return category;\n\n    } catch (error) {\n      console.error('Error fetching food data:', error);\n    }\n  };\n  \n  useEffect(() => {\n    fetch('http://localhost:8081/my_fridge')\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Fetched data:', data);\n        setFridgeItems(data); // Set the fetched data to fridgeItems\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleAddItem = async () => {\n    const category = await getFoodCategory(foodName);\n    console.log(category);\n    \n    const myData = {\n      name: foodName,\n      unit: category || \"unknown\",\n      quantity: amount,\n\n    };\n    try {\n      const result = await fetch('http://localhost:8081/my_fridge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(myData)\n      });\n  \n      const resultInJson = await result.json(); // Parse response as JSON\n  \n      // Update the state with the new fridge item\n      setFridgeItems(prev => [...prev, resultInJson]);\n      \n      console.log('Response:', resultInJson); // Handle the result here\n    } catch (error) {\n      console.error('Error submitting fridge item:', error);\n    }\n  };\n    \n  const toggleCategory = (category) => {\n    setExpanded((prevExpanded) => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category],\n    }));\n  };\n\n  const debounce = (func, delay) => {\n    let timeoutId;\n    return (...args) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setFoodName(value);\n    fetchSuggestions(value); // Call directly\n  };\n\n  const fetchSuggestions = async (input) => {\n    if (!input) {\n      setSuggestions([]); // Clear suggestions if input is empty\n      return;\n    }\n\n    const apiKey = '3e41632960bd2af35354380bd56e028f'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${input}`;\n\n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\",\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n\n      const data = await response.json();\n      const suggestions = Array.isArray(data.common) ? data.common.map((hint) => hint.food_name) : [];  // Extract food names for suggestions\n      \n      setSuggestions(suggestions);\n    } catch (error) {\n      console.error('Error fetching food suggestions:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Form */}\n      <div className=\"form\">\n        <div className=\"input-group\">\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter the food here\"\n              value={foodName}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Enter the amount\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n            <button onClick={handleAddItem}>Add to your fridge</button>\n          </div>\n          <div className=\"suggestions\">\n            <ul className=\"suggestions-list\">\n              {suggestions.map((suggestion, index) => (\n                <li\n                  key={index}\n                  className=\"suggestion-item\"\n                  onClick={() => {\n                    setFoodName(suggestion); // Set the food name to the selected suggestion\n                    setSuggestions([]); // Clear suggestions after selection\n                  }}\n                >\n                  {suggestion}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/* Display fridge contents */}\n      <h2>Your fridge:</h2>\n      <Accordion defaultActiveKey=\"0\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>Fruits</Accordion.Header>\n          {/* <div className={`collapsible-content ${expanded.fruits ? \"open\" : \"\"}`}> */}\n            <Accordion.Body>\n            <ul>\n              {fridgeItems\n                .filter((item) => item.category === \"fruits\")\n                .map((item) => {\n                  // console.log(item);\n                  return (\n                    <li key={item.id}>\n                      {item.food_name}, {item.quantity} {item.unit}\n                    </li>\n                  );\n                })}\n            </ul>\n          </Accordion.Body>\n        </Accordion.Item>\n\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.header>Meats</Accordion.header>\n            <Accordion.body>\n            <ul>\n              {fridgeItems\n                .filter((item) => item.category === \"meat\")\n                .map((item) => {\n                  // console.log(item);\n                  return (\n                    <li key={item.id}>\n                      {item.food_name}, {item.quantity} {item.unit}\n                    </li>\n                  );\n                })}\n            </ul>\n            </Accordion.body>\n        </Accordion.Item>\n\n      <Accordion.Item eventKey=\"2\">\n        <Accordion.header>Vegetables</Accordion.header>\n          <Accordion.body>\n            <ul>\n              {fridgeItems\n                .filter((item) => item.category === \"vegetables\")\n                .map((item) => (\n                  <li key={item.id}>\n                    {item.food_name}, {item.quantity} {item.unit}\n                  </li>\n                ))}\n            </ul>\n            </Accordion.body>\n        </Accordion.Item>\n      </Accordion>\n\n    </div>\n  );\n};\n\nexport default MyFridge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}