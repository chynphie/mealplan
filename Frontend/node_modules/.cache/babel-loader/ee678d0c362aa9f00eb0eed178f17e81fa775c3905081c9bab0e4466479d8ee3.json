{"ast":null,"code":"import * as React from 'react';\nconst SceneComponent = /*#__PURE__*/React.memo(_ref => {\n  let {\n    component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(component, rest);\n});\nexport function SceneMap(scenes) {\n  return _ref2 => {\n    let {\n      route,\n      jumpTo,\n      position\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(SceneComponent, {\n      key: route.key,\n      component: scenes[route.key],\n      route: route,\n      jumpTo: jumpTo,\n      position: position\n    });\n  };\n}","map":{"version":3,"names":["React","SceneComponent","memo","_ref","component","rest","createElement","SceneMap","scenes","_ref2","route","jumpTo","position","key"],"sources":["/Users/chynphieyang/MyWebPage/node_modules/react-native-tab-view/src/SceneMap.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { SceneRendererProps } from './types';\n\ntype SceneProps = {\n  route: any;\n} & Omit<SceneRendererProps, 'layout'>;\n\nconst SceneComponent = React.memo(\n  <T extends { component: React.ComponentType<any> } & SceneProps>({\n    component,\n    ...rest\n  }: T) => {\n    return React.createElement(component, rest);\n  }\n);\n\nexport function SceneMap<T extends any>(scenes: {\n  [key: string]: React.ComponentType<T>;\n}) {\n  return ({ route, jumpTo, position }: SceneProps) => (\n    <SceneComponent\n      key={route.key}\n      component={scenes[route.key]}\n      route={route}\n      jumpTo={jumpTo}\n      position={position}\n    />\n  );\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAQ9B,MAAMC,cAAc,gBAAGD,KAAK,CAACE,IAAI,CAC/BC,IAAA,IAGS;EAAA,IAHwD;IAC/DC,SAAS;IACT,GAAGC;EACF,CAAC,GAAAF,IAAA;EACF,oBAAOH,KAAK,CAACM,aAAa,CAACF,SAAS,EAAEC,IAAI,CAAC;AAC7C,CAAC,CACF;AAED,OAAO,SAASE,QAAQA,CAAgBC,MAEvC,EAAE;EACD,OAAOC,KAAA;IAAA,IAAC;MAAEC,KAAK;MAAEC,MAAM;MAAEC;IAAqB,CAAC,GAAAH,KAAA;IAAA,oBAC7CT,KAAA,CAAAM,aAAA,CAACL,cAAc;MACbY,GAAG,EAAEH,KAAK,CAACG,GAAI;MACfT,SAAS,EAAEI,MAAM,CAACE,KAAK,CAACG,GAAG,CAAE;MAC7BH,KAAK,EAAEA,KAAM;MACbC,MAAM,EAAEA,MAAO;MACfC,QAAQ,EAAEA;IAAS,EACnB;EAAA,CACH;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}