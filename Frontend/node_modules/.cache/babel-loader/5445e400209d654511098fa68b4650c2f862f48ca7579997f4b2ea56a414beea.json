{"ast":null,"code":"var _jsxFileName = \"/Users/chynphieyang/MyWebPage/Frontend/src/components/pages/MyFridge.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MyFridge.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyFridge = () => {\n  _s();\n  const [foodName, setFoodName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [fridgeItems, setFridgeItems] = useState([]);\n  const [expanded, setExpanded] = useState({\n    fruits: true,\n    meats: true,\n    vegetables: true\n  });\n  const [suggestions, setSuggestions] = useState([]); // State for auto lookup suggestions\n\n  // Get the external API for food category\n  const getFoodCategory = async foodName => {\n    const apiKey = '3e41632960bd2af35354380bd56e028f'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${foodName}`;\n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n      const data = await response.json();\n      console.log('Food data from external API:', data);\n\n      // Ensure hints is an array and has at least one element\n      if (data.hints && data.hints.length > 0) {\n        return data.hints[0].food.foodCategory; // Extract food category\n      } else {\n        console.error('No hints found in response');\n        return null;\n      }\n    } catch (error) {\n      console.error('Error fetching food data:', error);\n      return null; // Ensure this function returns null on error\n    }\n  };\n\n  // Fetch food suggestions based on user input\n  const fetchSuggestions = async input => {\n    if (!input) {\n      setSuggestions([]); // Clear suggestions if input is empty\n      return;\n    }\n    const apiKey = '3e41632960bd2af35354380bd56e028f'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${input}`;\n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n      const data = await response.json();\n      const suggestions = data.hints.map(hint => hint.food.food_name); // Extract food names for suggestions\n      setSuggestions(suggestions);\n    } catch (error) {\n      console.error('Error fetching food suggestions:', error);\n    }\n  };\n\n  // Debounce function to limit the number of API calls\n  const debounce = (func, delay) => {\n    let timeoutId;\n    return (...args) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setFoodName(value);\n    debonce(fetchSuggestions(value))(); // Call the debounce function\n  };\n  useEffect(() => {\n    fetch('http://localhost:8081/my_fridge').then(res => res.json()).then(data => {\n      console.log('Fetched data:', data);\n      setFridgeItems(data); // Set the fetched data to fridgeItems\n    }).catch(err => console.log(err));\n  }, []);\n  const handleAddItem = async () => {\n    const category = await getFoodCategory(foodName);\n    console.log('Retrieved category:', category);\n    const myData = {\n      name: foodName,\n      category: category || \"unknown\",\n      // Fallback to \"unknown\"\n      quantity: amount,\n      unit: \"g\"\n    };\n\n    // Uncomment to perform the POST request\n    // try {\n    //   const result = await fetch('http://localhost:8081/my_fridge', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify(myData)\n    //   });\n\n    //   const resultInJson = await result.json(); // Parse response as JSON\n\n    //   // Update the state with the new fridge item\n    //   setFridgeItems(prev => [...prev, resultInJson]);\n\n    //   console.log('Response:', resultInJson); // Handle the result here\n    // } catch (error) {\n    //   console.error('Error submitting fridge item:', error);\n    // }\n  };\n  const toggleCategory = category => {\n    setExpanded(prevExpanded => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter the food here\",\n          value: foodName,\n          onChange: handleInputChange // Use the new handleInputChange function\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-item\",\n            onClick: () => {\n              setFoodName(suggestion); // Set the food name to the selected suggestion\n              setSuggestions([]); // Clear suggestions after selection\n            },\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter the amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddItem,\n          children: \"Add to your fridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your fridge:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        onClick: () => toggleCategory(\"fruits\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: expanded.fruits ? \"▼  \" : \"▶  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), \"Fruits\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `collapsible-content ${expanded.fruits ? \"open\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: fridgeItems.filter(item => item.category === \"fruits\").map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.food_name, \", \", item.quantity, \" \", item.unit]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        onClick: () => toggleCategory(\"meats\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: expanded.meats ? \"▼ \" : \"▶ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), \"Meats\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `collapsible-content ${expanded.meats ? \"open\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: fridgeItems.filter(item => item.category === \"meat\").map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.food_name, \", \", item.quantity, \" \", item.unit]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        onClick: () => toggleCategory(\"vegetables\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: expanded.vegetables ? \"▼ \" : \"▶ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), \"Vegetables\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `collapsible-content ${expanded.vegetables ? \"open\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: fridgeItems.filter(item => item.category === \"vegetables\").map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.food_name, \", \", item.quantity, \" \", item.unit]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(MyFridge, \"vBh9s6J7qiTfQUePcKXMVxqqiYc=\");\n_c = MyFridge;\nexport default MyFridge;\nvar _c;\n$RefreshReg$(_c, \"MyFridge\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyFridge","_s","foodName","setFoodName","amount","setAmount","fridgeItems","setFridgeItems","expanded","setExpanded","fruits","meats","vegetables","suggestions","setSuggestions","getFoodCategory","apiKey","appId","apiUrl","response","fetch","headers","ok","Error","data","json","console","log","hints","length","food","foodCategory","error","fetchSuggestions","input","map","hint","food_name","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","handleInputChange","e","value","target","debonce","then","res","catch","err","handleAddItem","category","myData","name","quantity","unit","toggleCategory","prevExpanded","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","suggestion","index","onClick","filter","item","id","_c","$RefreshReg$"],"sources":["/Users/chynphieyang/MyWebPage/Frontend/src/components/pages/MyFridge.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MyFridge.css';\n\nconst MyFridge = () => {\n  const [foodName, setFoodName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [fridgeItems, setFridgeItems] = useState([]);\n  const [expanded, setExpanded] = useState({\n    fruits: true,\n    meats: true,\n    vegetables: true,\n  });\n  const [suggestions, setSuggestions] = useState([]); // State for auto lookup suggestions\n\n  // Get the external API for food category\n  const getFoodCategory = async (foodName) => {\n    const apiKey = '3e41632960bd2af35354380bd56e028f'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${foodName}`;\n\n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\",\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n\n      const data = await response.json();\n      console.log('Food data from external API:', data);\n      \n      // Ensure hints is an array and has at least one element\n      if (data.hints && data.hints.length > 0) {\n        return data.hints[0].food.foodCategory; // Extract food category\n      } else {\n        console.error('No hints found in response');\n        return null;\n      }\n\n    } catch (error) {\n      console.error('Error fetching food data:', error);\n      return null; // Ensure this function returns null on error\n    }\n  };\n\n  // Fetch food suggestions based on user input\n  const fetchSuggestions = async (input) => {\n    if (!input) {\n      setSuggestions([]); // Clear suggestions if input is empty\n      return;\n    }\n\n    const apiKey = '3e41632960bd2af35354380bd56e028f'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${input}`;\n\n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\",\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n\n      const data = await response.json();\n      const suggestions = data.hints.map(hint => hint.food.food_name); // Extract food names for suggestions\n      setSuggestions(suggestions);\n    } catch (error) {\n      console.error('Error fetching food suggestions:', error);\n    }\n  };\n\n  // Debounce function to limit the number of API calls\n  const debounce = (func, delay) => {\n    let timeoutId;\n    return (...args) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setFoodName(value);\n    debonce(fetchSuggestions(value))(); // Call the debounce function\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:8081/my_fridge')\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Fetched data:', data);\n        setFridgeItems(data); // Set the fetched data to fridgeItems\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleAddItem = async () => {\n    const category = await getFoodCategory(foodName);\n    console.log('Retrieved category:', category);\n    \n    const myData = {\n      name: foodName,\n      category: category || \"unknown\", // Fallback to \"unknown\"\n      quantity: amount,\n      unit: \"g\"\n    };\n\n    // Uncomment to perform the POST request\n    // try {\n    //   const result = await fetch('http://localhost:8081/my_fridge', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify(myData)\n    //   });\n  \n    //   const resultInJson = await result.json(); // Parse response as JSON\n  \n    //   // Update the state with the new fridge item\n    //   setFridgeItems(prev => [...prev, resultInJson]);\n      \n    //   console.log('Response:', resultInJson); // Handle the result here\n    // } catch (error) {\n    //   console.error('Error submitting fridge item:', error);\n    // }\n  };\n    \n  const toggleCategory = (category) => {\n    setExpanded((prevExpanded) => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category],\n    }));\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Form */}\n      <div className=\"form\">\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter the food here\"\n            value={foodName}\n            onChange={handleInputChange} // Use the new handleInputChange function\n          />\n          <div className=\"suggestions\">\n            {suggestions.map((suggestion, index) => (\n              <div key={index} className=\"suggestion-item\" onClick={() => {\n                setFoodName(suggestion); // Set the food name to the selected suggestion\n                setSuggestions([]); // Clear suggestions after selection\n              }}>\n                {suggestion}\n              </div>\n            ))}\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter the amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n          <button onClick={handleAddItem}>Add to your fridge</button>\n        </div>\n      </div>\n\n      {/* Display fridge contents */}\n      <h2>Your fridge:</h2>\n      <div className=\"collapsible\">\n        <h2 onClick={() => toggleCategory(\"fruits\")}>\n          <span className=\"arrow\">{expanded.fruits ? \"▼  \" : \"▶  \"}</span>\n          Fruits\n        </h2>\n        <div className={`collapsible-content ${expanded.fruits ? \"open\" : \"\"}`}>\n          <ul>\n            {fridgeItems\n              .filter((item) => item.category === \"fruits\")\n              .map((item) => (\n                <li key={item.id}>\n                  {item.food_name}, {item.quantity} {item.unit}\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"collapsible\">\n        <h2 onClick={() => toggleCategory(\"meats\")}>\n          <span className=\"arrow\">{expanded.meats ? \"▼ \" : \"▶ \"}</span>\n          Meats\n        </h2>\n        <div className={`collapsible-content ${expanded.meats ? \"open\" : \"\"}`}>\n          <ul>\n            {fridgeItems\n              .filter((item) => item.category === \"meat\")\n              .map((item) => (\n                <li key={item.id}>\n                  {item.food_name}, {item.quantity} {item.unit}\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"collapsible\">\n        <h2 onClick={() => toggleCategory(\"vegetables\")}>\n          <span className=\"arrow\">{expanded.vegetables ? \"▼ \" : \"▶ \"}</span>\n          Vegetables\n        </h2>\n        <div\n          className={`collapsible-content ${expanded.vegetables ? \"open\" : \"\"}`}\n        >\n          <ul>\n            {fridgeItems\n              .filter((item) => item.category === \"vegetables\")\n              .map((item) => (\n                <li key={item.id}>\n                  {item.food_name}, {item.quantity} {item.unit}\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyFridge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}