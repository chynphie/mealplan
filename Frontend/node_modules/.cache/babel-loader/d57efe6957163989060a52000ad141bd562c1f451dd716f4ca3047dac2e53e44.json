{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./MyFridge.css';import Accordion from'react-bootstrap/Accordion';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MyFridge=()=>{const[foodName,setFoodName]=useState('');const[amount,setAmount]=useState('');const[fridgeItems,setFridgeItems]=useState([]);const[suggestions,setSuggestions]=useState([]);const[expanded,setExpanded]=useState({fruits:true,meats:true,vegetables:true});// get the external api for food category\nconst getFoodCategory=async foodName=>{const apiKey='3ff7c255ca646f62bcbe74bc5987f59d';// Replace with your actual API key\nconst appId='800b89c9';// Replace with your actual App ID\nconst apiUrl=\"https://trackapi.nutritionix.com/v2/search/instant/?query=\".concat(foodName);console.log(foodName,apiUrl);try{const response=await fetch(apiUrl,{headers:{\"x-app-id\":appId,\"x-app-key\":apiKey,\"Content-Type\":\"application/json\"}});if(!response.ok){throw new Error('API request failed');}const data=await response.json();console.log('food data from external api',data);const category=data.common[0].serving_unit;// Extract food category\nconst unit=data.common[0].serving_qty;return category;}catch(error){console.error('Error fetching food data:',error);}};useEffect(()=>{fetch('http://localhost:8081/my_fridge').then(res=>res.json()).then(data=>{console.log('Fetched data:',data);setFridgeItems(data);// Set the fetched data to fridgeItems\n}).catch(err=>console.log(err));},[]);const handleAddItem=async()=>{const category=await getFoodCategory(foodName);console.log(category);const myData={name:foodName,unit:category||\"unknown\",quantity:amount};try{const result=await fetch('http://localhost:8081/my_fridge',{method:'POST',Headers:{'Content-Type':'application/json'},Body:JSON.stringify(myData)});const resultInJson=await result.json();// Parse response as JSON\n// Update the state with the new fridge item\nsetFridgeItems(prev=>[...prev,resultInJson]);console.log('Response:',resultInJson);// Handle the result here\n}catch(error){console.error('Error submitting fridge item:',error);}};const toggleCategory=category=>{setExpanded(prevExpanded=>({...prevExpanded,[category]:!prevExpanded[category]}));};// const debounce = (func, delay) => {\n//   let timfeoutId;\n//   return (...args) => {\n//     if (timeoutId) {\n//       clearTimeout(timeoutId);\n//     }\n//     timeoutId = setTimeout(() => {\n//       func(...args);\n//     }, delay);\n//   };\n// };\nconst handleInputChange=e=>{const value=e.target.value;setFoodName(value);fetchSuggestions(value);// Call directly\n};const fetchSuggestions=async input=>{if(!input){setSuggestions([]);// Clear suggestions if input is empty\nreturn;}const apiKey='3ff7c255ca646f62bcbe74bc5987f59d';// Replace with your actual API key\nconst appId='800b89c9';// Replace with your actual App ID\nconst apiUrl=\"https://trackapi.nutritionix.com/v2/search/instant/?query=\".concat(input);try{const response=await fetch(apiUrl,{headers:{\"x-app-id\":appId,\"x-app-key\":apiKey,\"Content-Type\":\"application/json\"}});if(!response.ok){throw new Error('API request failed');}const data=await response.json();const suggestions=Array.isArray(data.common)?data.common.map(hint=>hint.food_name):[];// Extract food names for suggestions\nsetSuggestions(suggestions);}catch(error){console.error('Error fetching food suggestions:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter the food here\",value:foodName,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter the amount\",value:amount,onChange:e=>setAmount(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddItem,children:\"Add to your fridge\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"suggestions\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions-list\",children:suggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"suggestion-item\",onClick:()=>{setFoodName(suggestion);// Set the food name to the selected suggestion\nsetSuggestions([]);// Clear suggestions after selection\n},children:suggestion},index))})})]})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Your fridge:\"}),/*#__PURE__*/_jsxs(Accordion,{defaultActiveKey:\"0\",children:[/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:\"0\",children:[/*#__PURE__*/_jsx(Accordion.Header,{children:\"Fruits\"}),/*#__PURE__*/_jsx(Accordion.Body,{children:/*#__PURE__*/_jsx(\"ul\",{children:fridgeItems.filter(item=>item.category===\"fruits\").map(item=>{// console.log(item);\nreturn/*#__PURE__*/_jsxs(\"li\",{children:[item.food_name,\", \",item.quantity,\" \",item.unit]},item.id);})})})]}),/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:\"1\",children:[/*#__PURE__*/_jsx(Accordion.Header,{children:\"Meats\"}),/*#__PURE__*/_jsx(Accordion.Body,{children:/*#__PURE__*/_jsx(\"ul\",{children:fridgeItems.filter(item=>item.category===\"meat\").map(item=>{// console.log(item);\nreturn/*#__PURE__*/_jsxs(\"li\",{children:[item.food_name,\", \",item.quantity,\" \",item.unit]},item.id);})})})]}),/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:\"2\",children:[/*#__PURE__*/_jsx(Accordion.Header,{children:\"Vegetables\"}),/*#__PURE__*/_jsx(Accordion.Body,{children:/*#__PURE__*/_jsx(\"ul\",{children:fridgeItems.filter(item=>item.category===\"vegetables\").map(item=>/*#__PURE__*/_jsxs(\"li\",{children:[item.food_name,\", \",item.quantity,\" \",item.unit]},item.id))})})]})]})]});};export default MyFridge;","map":{"version":3,"names":["React","useState","useEffect","Accordion","jsx","_jsx","jsxs","_jsxs","MyFridge","foodName","setFoodName","amount","setAmount","fridgeItems","setFridgeItems","suggestions","setSuggestions","expanded","setExpanded","fruits","meats","vegetables","getFoodCategory","apiKey","appId","apiUrl","concat","console","log","response","fetch","headers","ok","Error","data","json","category","common","serving_unit","unit","serving_qty","error","then","res","catch","err","handleAddItem","myData","name","quantity","result","method","Headers","Body","JSON","stringify","resultInJson","prev","toggleCategory","prevExpanded","handleInputChange","e","value","target","fetchSuggestions","input","Array","isArray","map","hint","food_name","className","children","type","placeholder","onChange","onClick","suggestion","index","defaultActiveKey","Item","eventKey","Header","filter","item","id"],"sources":["/Users/chynphieyang/Project/MyWebPage/Frontend/src/components/pages/MyFridge.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MyFridge.css';\nimport Accordion from 'react-bootstrap/Accordion';\n\nconst MyFridge = () => {\n  const [foodName, setFoodName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [fridgeItems, setFridgeItems] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [expanded, setExpanded] = useState({\n    fruits: true,\n    meats: true,\n    vegetables: true,\n  });\n\n  // get the external api for food category\n  const getFoodCategory = async (foodName) => {\n    const apiKey = '3ff7c255ca646f62bcbe74bc5987f59d'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${foodName}`;\n    console.log(foodName, apiUrl);\n    \n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\",\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n\n      const data = await response.json();\n      console.log('food data from external api', data);\n      const category = data.common[0].serving_unit; // Extract food category\n      const unit = data.common[0].serving_qty\n      return category;\n\n    } catch (error) {\n      console.error('Error fetching food data:', error);\n    }\n  };\n  \n  useEffect(() => {\n    fetch('http://localhost:8081/my_fridge')\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Fetched data:', data);\n        setFridgeItems(data); // Set the fetched data to fridgeItems\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleAddItem = async () => {\n    const category = await getFoodCategory(foodName);\n    console.log(category);\n    \n    const myData = {\n      name: foodName,\n      unit: category || \"unknown\",\n      quantity: amount,\n\n    };\n    try {\n      const result = await fetch('http://localhost:8081/my_fridge', {\n        method: 'POST',\n        Headers: {\n          'Content-Type': 'application/json'\n        },\n        Body: JSON.stringify(myData)\n      });\n  \n      const resultInJson = await result.json(); // Parse response as JSON\n  \n      // Update the state with the new fridge item\n      setFridgeItems(prev => [...prev, resultInJson]);\n      \n      console.log('Response:', resultInJson); // Handle the result here\n    } catch (error) {\n      console.error('Error submitting fridge item:', error);\n    }\n  };\n    \n  const toggleCategory = (category) => {\n    setExpanded((prevExpanded) => ({\n      ...prevExpanded,\n      [category]: !prevExpanded[category],\n    }));\n  };\n\n  // const debounce = (func, delay) => {\n  //   let timfeoutId;\n  //   return (...args) => {\n  //     if (timeoutId) {\n  //       clearTimeout(timeoutId);\n  //     }\n  //     timeoutId = setTimeout(() => {\n  //       func(...args);\n  //     }, delay);\n  //   };\n  // };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setFoodName(value);\n    fetchSuggestions(value); // Call directly\n  };\n\n  const fetchSuggestions = async (input) => {\n    if (!input) {\n      setSuggestions([]); // Clear suggestions if input is empty\n      return;\n    }    \n    const apiKey = '3ff7c255ca646f62bcbe74bc5987f59d'; // Replace with your actual API key\n    const appId = '800b89c9'; // Replace with your actual App ID\n    const apiUrl = `https://trackapi.nutritionix.com/v2/search/instant/?query=${input}`;\n\n    try {\n      const response = await fetch(apiUrl, {\n        headers: {\n          \"x-app-id\": appId,\n          \"x-app-key\": apiKey,\n          \"Content-Type\": \"application/json\",\n        }\n        \n      });\n      if (!response.ok) {\n        throw new Error('API request failed');\n      }\n\n      const data = await response.json();\n      const suggestions = Array.isArray(data.common) ? data.common.map((hint) => hint.food_name) : [];  // Extract food names for suggestions\n      \n      setSuggestions(suggestions);\n    } catch (error) {\n      console.error('Error fetching food suggestions:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Form */}\n      <div className=\"form\">\n        <div className=\"input-group\">\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter the food here\"\n              value={foodName}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Enter the amount\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n            <button onClick={handleAddItem}>Add to your fridge</button>\n          </div>\n          <div className=\"suggestions\">\n            <ul className=\"suggestions-list\">\n              {suggestions.map((suggestion, index) => (\n                <li\n                  key={index}\n                  className=\"suggestion-item\"\n                  onClick={() => {\n                    setFoodName(suggestion); // Set the food name to the selected suggestion\n                    setSuggestions([]); // Clear suggestions after selection\n                  }}\n                >\n                  {suggestion}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/* Display fridge contents */}\n      <h2>Your fridge:</h2>\n      <Accordion defaultActiveKey=\"0\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>Fruits</Accordion.Header>\n            <Accordion.Body>\n            <ul>\n              {fridgeItems\n                .filter((item) => item.category === \"fruits\")\n                .map((item) => {\n                  // console.log(item);\n                  return (\n                    <li key={item.id}>\n                      {item.food_name}, {item.quantity} {item.unit}\n                    </li>\n                  );\n                })}\n            </ul>\n          </Accordion.Body>\n        </Accordion.Item>\n\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>Meats</Accordion.Header>\n            <Accordion.Body>\n            <ul>\n              {fridgeItems\n                .filter((item) => item.category === \"meat\")\n                .map((item) => {\n                  // console.log(item);\n                  return (\n                    <li key={item.id}>\n                      {item.food_name}, {item.quantity} {item.unit}\n                    </li>\n                  );\n                })}\n            </ul>\n            </Accordion.Body>\n        </Accordion.Item>\n\n      <Accordion.Item eventKey=\"2\">\n        <Accordion.Header>Vegetables</Accordion.Header>\n          <Accordion.Body>\n            <ul>\n              {fridgeItems\n                .filter((item) => item.category === \"vegetables\")\n                .map((item) => (\n                  <li key={item.id}>\n                    {item.food_name}, {item.quantity} {item.unit}\n                  </li>\n                ))}\n            </ul>\n            </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n    </div>\n  );\n};\n\nexport default MyFridge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}