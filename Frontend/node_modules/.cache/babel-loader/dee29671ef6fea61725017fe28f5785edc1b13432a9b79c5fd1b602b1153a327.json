{"ast":null,"code":"var _jsxFileName = \"/Users/chynphieyang/MyWebPage/src/components/WorldMap.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { ComposableMap, Geographies, Geography, ZoomableGroup, Marker } from 'react-simple-maps';\n// import { geoPath } from 'd3-geo';\n// import { feature } from 'topojson-client';\n// import worldData from '../data/world-110m.json'; // Ensure this path is correct\n// import { Tooltip } from 'react-tooltip';\n\n// const WorldMap = () => {\n//   const navigate = useNavigate();\n//   const [content, setContent] = useState(\"\");\n//   const handleCountryClick = (countryCode) => {\n//     navigate(`/country/${countryCode}`);\n//   };\n\n//   const geoUrl = 'https://unpkg.com/world-atlas@1.1.4/world/110m.json';\n\n//   const markers = [\n//     {\n//       markerOffset: -15,\n//       name: \"Sau Paulo\",\n//       coordinates: [-58.3816, -34.6037]\n//     }\n//   ]\n//   return (\n//     <div style={{\n//       width: \"100%\",\n//       height: \"100%\",\n//       display: 'flex',\n//       flexDirection: 'column',\n//       justifyContent: 'center',\n//       alignItems: 'center'\n//     }}>\n//   <Tooltip place=\"top\" type=\"dark\" effect=\"float\" />\n//       <div style={{ width: \"1400px\", borderStyle: 'double' }}>\n//         <ComposableMap data-tip=\"\">\n//           {/* <ZoomableGroup zoom={1}> */}\n//             <Geographies geography={geoUrl}>\n//               {({ geographies }) =>\n//                 geographies.map((geo) => (\n//                   <Geography\n//                     key={geo.rsmKey}\n//                     geography={geo}\n//                     onClick={() => handleCountryClick(geo.properties.ISO_A3)}\n//                     // onMouseEnter={() => {\n//                     //   const { NAME } = geo.properties;\n//                     //   setContent(`${NAME}`);\n//                     // }}\n//                     // onMouseLeave={() => {\n//                     //   setContent('');\n//                     // }}\n//                     style={{\n//                       hover: { fill: \"#F53\", outline: \"none\" },\n//                       pressed: { fill: \"#E42\", outline: \"none\" }\n//                     }}\n//                   />\n//                 ))\n//               }\n//             </Geographies>\n//             {/* {markers.map(({ name, coordinates, markerOffset }) => (\n//               <Marker key={name} coordinates={coordinates}>\n//                 <circle r={10} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2}></circle>\n//                 <text\n//                   textAnchor=\"middle\" y={markerOffset}\n//                   style={{\n//                     fontFamily: \"system-ui\", \n//                     fill: \"#5D5A6D\"\n//                   }}\n//                 >\n//                   {name}\n//                 </text>\n//               </Marker>\n//             ))} */}\n//           {/* </ZoomableGroup> */}\n//         </ComposableMap>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WorldMap;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { Tooltip } from 'react-tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = () => {\n  _s();\n  const navigate = useNavigate();\n  const [content, setContent] = useState(\"\");\n  const handleCountryClick = countryCode => {\n    if (countryCode) {\n      console.log(countryCode);\n      navigate(`/country/${countryCode}`);\n    }\n  };\n  const geoUrl = 'https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [hihihi, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"1400px\",\n        borderStyle: 'double'\n      },\n      children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n        \"data-tip\": \"\",\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            onClick: () => {\n              console.log('herere', geo.properties.ISO_A3);\n              handleCountryClick(geo.properties.ISO_A3);\n            }\n            // onMouseEnter={() => {\n            //   const { NAME } = geo.properties;\n            //   setContent(`${NAME}`);\n            // }}\n            // onMouseLeave={() => {\n            //  setContent('');\n            // }}\n            ,\n            style: {\n              default: {\n                fill: \"#D6D6DA\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#F53\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#E42\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"OlMIblTLOGV9uKy1tQNmlvloUrM=\", false, function () {\n  return [useNavigate];\n});\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","useNavigate","ComposableMap","Geographies","Geography","Tooltip","jsxDEV","_jsxDEV","WorldMap","_s","navigate","content","setContent","handleCountryClick","countryCode","console","log","geoUrl","style","width","height","display","flexDirection","justifyContent","alignItems","children","place","type","effect","fileName","_jsxFileName","lineNumber","columnNumber","hihihi","borderStyle","geography","geographies","map","geo","onClick","properties","ISO_A3","default","fill","outline","hover","pressed","rsmKey","_c","$RefreshReg$"],"sources":["/Users/chynphieyang/MyWebPage/src/components/WorldMap.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { ComposableMap, Geographies, Geography, ZoomableGroup, Marker } from 'react-simple-maps';\n// import { geoPath } from 'd3-geo';\n// import { feature } from 'topojson-client';\n// import worldData from '../data/world-110m.json'; // Ensure this path is correct\n// import { Tooltip } from 'react-tooltip';\n\n// const WorldMap = () => {\n//   const navigate = useNavigate();\n//   const [content, setContent] = useState(\"\");\n//   const handleCountryClick = (countryCode) => {\n//     navigate(`/country/${countryCode}`);\n//   };\n\n//   const geoUrl = 'https://unpkg.com/world-atlas@1.1.4/world/110m.json';\n\n//   const markers = [\n//     {\n//       markerOffset: -15,\n//       name: \"Sau Paulo\",\n//       coordinates: [-58.3816, -34.6037]\n//     }\n//   ]\n//   return (\n//     <div style={{\n//       width: \"100%\",\n//       height: \"100%\",\n//       display: 'flex',\n//       flexDirection: 'column',\n//       justifyContent: 'center',\n//       alignItems: 'center'\n//     }}>\n//   <Tooltip place=\"top\" type=\"dark\" effect=\"float\" />\n//       <div style={{ width: \"1400px\", borderStyle: 'double' }}>\n//         <ComposableMap data-tip=\"\">\n//           {/* <ZoomableGroup zoom={1}> */}\n//             <Geographies geography={geoUrl}>\n//               {({ geographies }) =>\n//                 geographies.map((geo) => (\n//                   <Geography\n//                     key={geo.rsmKey}\n//                     geography={geo}\n//                     onClick={() => handleCountryClick(geo.properties.ISO_A3)}\n//                     // onMouseEnter={() => {\n//                     //   const { NAME } = geo.properties;\n//                     //   setContent(`${NAME}`);\n//                     // }}\n//                     // onMouseLeave={() => {\n//                     //   setContent('');\n//                     // }}\n//                     style={{\n//                       hover: { fill: \"#F53\", outline: \"none\" },\n//                       pressed: { fill: \"#E42\", outline: \"none\" }\n//                     }}\n//                   />\n//                 ))\n//               }\n//             </Geographies>\n//             {/* {markers.map(({ name, coordinates, markerOffset }) => (\n//               <Marker key={name} coordinates={coordinates}>\n//                 <circle r={10} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2}></circle>\n//                 <text\n//                   textAnchor=\"middle\" y={markerOffset}\n//                   style={{\n//                     fontFamily: \"system-ui\", \n//                     fill: \"#5D5A6D\"\n//                   }}\n//                 >\n//                   {name}\n//                 </text>\n//               </Marker>\n//             ))} */}\n//           {/* </ZoomableGroup> */}\n//         </ComposableMap>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default WorldMap;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { Tooltip } from 'react-tooltip';\n\nconst WorldMap = () => {\n  const navigate = useNavigate();\n  const [content, setContent] = useState(\"\");\n\n  const handleCountryClick = (countryCode) => {\n    if (countryCode) {\n      console.log(countryCode);\n      navigate(`/country/${countryCode}`);\n    }\n  };\n\n  const geoUrl = 'https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json';\n\n  return (\n    <div style={{\n      width: \"100%\",\n      height: \"100%\",\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }}>\n      <Tooltip place=\"top\" type=\"dark\" effect=\"float\" />\n      <p>{hihihi} </p>\n      <div style={{ width: \"1400px\", borderStyle: 'double' }}>\n        <ComposableMap data-tip=\"\">\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onClick={() => {\n                    console.log('herere', geo.properties.ISO_A3);\n                    handleCountryClick(geo.properties.ISO_A3)\n                  }}\n                  // onMouseEnter={() => {\n                  //   const { NAME } = geo.properties;\n                  //   setContent(`${NAME}`);\n                  // }}\n                  // onMouseLeave={() => {\n                  //  setContent('');\n                  // }}\n                  style={{\n                    default: { fill: \"#D6D6DA\", outline: \"none\" },\n                    hover: { fill: \"#F53\", outline: \"none\" },\n                    pressed: { fill: \"#E42\", outline: \"none\" }\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ComposableMap>\n      </div>\n    </div>\n  );\n};\n\nexport default WorldMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}